---
import type { Product } from "@/interfaces/product.interface";
import { actions } from "astro:actions";
import MainLayout from "@/layouts/MainLayout.astro";
import ProductSlideShow from "@/components/products/ProductSlideShow.astro";

const { slug } = Astro.params;
if (!slug) return Astro.redirect("/");
const resp = await Astro.callAction(actions.getProducBySlug.orThrow, { slug });
if (!resp.success) return Astro.redirect("/store");
const product = resp.data.product as Product;
const images = resp.data.images as string[];
---

<MainLayout title={product.title} description={product.description}>
  <!-- <h1 class="text-2xl font-bold">{product.title}</h1> -->

  <div class="grid grid-cols-1 md:grid-cols-3 w-full gap-4">
    <ProductSlideShow images={images} />

    <section>
      <h2 class="text-2xl font-bold">{product.title}</h2>
      <h2 class="font-bold">${product.price}</h2>

      <h3 class="mt-5">Tallas</h3>
      <ul class="flex gap-3">
        {
          product.sizes
            .split(",")
            .map((size) => <li data-size={size}>{size}</li>)
        }
      </ul>

      <h3 class="mt-5">Cantidad</h3>
      <div>
        <button id="decrement-button" class="btn-quantity">-</button>
        <input
          id="quantity"
          type="number"
          min="1"
          value="1"
          class="text-gray-800"
        />
        <button id="increment-button" class="btn-quantity">+</button>
      </div>

      <button
        id="add-to-cart"
        class="mt-5 bg-blue-500 text-white p-3 w-full disabled:bg-gray-500"
        >Añadir al carrito</button
      >

      <h3 class="mt-10">Descripción</h3>
      <p>{product.description}</p>
    </section>
  </div>

  <input type="hidden" id="product-id" value={product.id} />
</MainLayout>

<script>
  import { CartCookiesClient } from '@/utils/cart-cookies-client';
  const sizeElements = document.querySelectorAll("li");

  sizeElements.forEach((liElement) => {
    liElement.addEventListener("click", () => {
      sizeElements.forEach((li) => li.classList.remove("selected-size"));
      liElement.classList.add("selected-size");
    });
  });

  const quantityInput = document.querySelector("#quantity") as HTMLInputElement;
  const productIdInput = document.querySelector(
    "#product-id"
  ) as HTMLInputElement;

  let quantity = 1;

  const decrementButton = document.querySelector(
    "#decrement-button"
  ) as HTMLButtonElement;
  const incrementButton = document.querySelector(
    "#increment-button"
  ) as HTMLButtonElement;
  const addToCartButton = document.querySelector(
    "#add-to-cart"
  ) as HTMLButtonElement;

  incrementButton.addEventListener("click", () => {
    console.log("click");
    quantity = Math.min(quantity + 1, 5);
    quantityInput.value = quantity.toString();
  });

  decrementButton.addEventListener("click", () => {
    quantity = Math.max(quantity - 1, 1);
    quantityInput.value = quantity.toString();
  });

  addToCartButton.addEventListener("click", () => {
    const size = document.querySelector(".selected-size")?.textContent;
    if (!size) return alert("Selecciona una talla");
    console.log("add to cart", {
      id: productIdInput.value,
      quantity,
      size,
    });
    CartCookiesClient.addItem({
      productId: productIdInput.value,
      quantity,
      size,
    })
    window.location.href = "/store/cart";
  });
</script>

<style>
  h3 {
    @apply font-bold;
  }

  li {
    @apply hover:underline cursor-pointer;
  }

  .selected-size {
    @apply text-blue-500 underline font-bold transition-all;
  }

  .btn-quantity {
    @apply w-10 text-center p-2 border border-gray-300 hover:bg-gray-100 cursor-pointer;
  }

  input {
    @apply w-16 text-center p-2 border border-gray-300;
  }

  input[type="number"]::-webkit-outer-spin-button,
  input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type="number"] {
    -moz-appearance: textfield; /* Para Firefox */
  }
</style>
