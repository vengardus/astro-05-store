---
import type { CartItemExtends } from "@/interfaces/cart/cart-item-extends.interface";

interface Props {
  cartItems: CartItemExtends[];
}

const { cartItems } = Astro.props;
---

{
  cartItems.map((item) => (
    <div class="flex gap-5 mt-5">
      <img
        src={item.image}
        alt={item.title}
        class="w-20 h-20 object-contain cursor-pointer"
      />
      <div class="">
        <a href={`/store/products/${item.slug}`} class="hover:underline">
          {item.title}
        </a>
        <p>$ {item.price}</p>
        <p>
          Talla: <span>{item.size}</span>
        </p>
        <p>
          Cantidad: <span>{item.quantity}</span>
        </p>
        <button 
          class="text-blue-500 btn-delete"
          data-id={item.productId}
          data-size={item.size} 
        >
            Remover
        </button>
      </div>
    </div>
  ))
}

<script>
  console.log("script:CarList.astro")
  import { CartCookiesClient } from "@/utils/cart-cookies-client";
  import { navigate } from "astro:transitions/client";
  import { itemsInCart } from "@/store/cart.store";
  
  document.addEventListener('astro:page-load', () => {
    const deleteButtons:NodeListOf<HTMLButtonElement> = document.querySelectorAll(".btn-delete");

    deleteButtons.forEach((btn) => {
      btn.addEventListener("click", (event) => {
        //event.preventDefault();
        const target = event.target as HTMLButtonElement;
        const productId = target.dataset.id?? '';
        const size = target.dataset.size?? '';
        console.log("delete", productId, size);

        const cart = CartCookiesClient.removeIten(productId, size);
        
        itemsInCart.set(cart.length);

        // TODO: Reload page temporal
        //window.location.reload();
        navigate("/store/cart");
      });
    });

  })
  
</script>