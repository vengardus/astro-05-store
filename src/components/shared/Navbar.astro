---
import { NAVBAR_OPTIONS } from "@/config/constants";
import {CartCounter} from "@/components/cart/react/CartCounter";

const currentPath = Astro.url.pathname;
const navBarOptions = NAVBAR_OPTIONS;

//console.log(Astro.locals) 
const { isLoggedIn, isAdmin } = Astro.locals;

---

<nav 
  class="bg-gray-900 text-white w-full fixed top-0 z-10 h-16" 
  x-data="{ openMobileMenu: false, openSubMenu: false }">
  <div class="max-w-7xl mx-auto px-2 sm:px-3">
    <div class="flex items-center h-16 ">
      <div class="flex items-center w-full justify-between">
        <div class="flex-shrink-0">
          <span class="text-2xl font-bold">Logo</span>
        </div>
        <div class="hidden md:block">
          <div class="ml-10 flex items-center space-x-7">
            <CartCounter client:load/>
            {
              navBarOptions.map((item) => (
                  (!isAdmin && item.path.startsWith("/dashboard"))
                  ? <></>
                  :(isLoggedIn && item.label == "login")
                  ? <></>
                  :(!isLoggedIn && item.label == "logout" )
                  ? <></>
                  :(!isLoggedIn && item.label == "protected")
                  ? <></>
                : 
                <div>
                  {

                    !item.options 
                    ? (
                      item.label && item.label == "logout"
                      ?<a href="#" id="logout" data-astro-reload  class="px-3 py-2 rounded-md text-base font-medium hover:text-blue-500">{item.name}</a>
                      :
                      <a href={item.path}  class="px-3 py-2 rounded-md text-base font-medium hover:text-blue-500">{item.name}</a>
                    ) 
                    : (
                      // Sub-Opcionts
                      <div @click.away="openSubMenu = false" class="relative">
                        <button @click="openSubMenu = !openSubMenu" class="px-3 py-2 rounded-md text-base font-medium hover:text-blue-500 flex items-center">
                          {item.name}
                          <svg :class="{'transform rotate-180': openSubMenu}" class="ml-1 h-5 w-5 inline-block transition-transform" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                          </svg>
                        </button>
                        <div x-show="openSubMenu" x-cloak class="absolute left-0 mt-2 w-48 rounded-md shadow-lg bg-gray-800 ring-1 ring-black ring-opacity-5">
                          <div class="py-1" role="menu" aria-orientation="vertical" aria-labelledby="options-menu">
                            {
                              item.options.map((option) => (
                                <a href={option.path} class="block px-4 py-2 text-base hover:text-blue-500" role="menuitem">{option.name}</a>
                              ))
                            }
                          </div>
                        </div>
                      </div>
                    )
                  }

                  {
                    item.path == currentPath  
                      ? <div 
                        class="border-b-2 border-blue-500 mx-4"
                        transition:name={`item-name-nav`}
                      >
                      </div>
                      : <div 
                        class="border-b-2 border-transparent "
                      >
                      </div>
                  }
                  
                </div>
              ))
            }
          </div>
        </div>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden ">
        <button @click="openMobileMenu = !openMobileMenu" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white">
          <span class="sr-only">Open main menu</span>
          <svg x-show="!openMobileMenu" xmlns="http://www.w3.org/2000/svg" class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
          <svg x-show="openMobileMenu" xmlns="http://www.w3.org/2000/svg" class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div x-show="openMobileMenu" x-cloak class="md:hidden">
    <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
      {
        navBarOptions.map((item) => (
          (isLoggedIn && item.label == "login")
          ? <></>
          :(!isLoggedIn && (item.label == "logout" || item.label == "protected"))
          ? <></>

          :!item.options
          ? (
            item.label && item.label == "logout"
            ? <a href="#" id="logout-mobile" data-astro-reload  class="block px-3 py-2 rounded-md text-base font-medium hover:text-blue-500" @click="openMobileMenu = false">{item.name}</a>
            : <a href={item.path} class="block px-3 py-2 rounded-md text-base font-medium hover:text-blue-500" @click="openMobileMenu = false">{item.name}</a>
          )
          : (
            <div x-data="{ open: false }">
              <button @click="open = !open" class="w-full text-left px-3 py-2 rounded-md text-base font-medium hover:text-blue-500 flex items-center">
                {item.name}
                <svg :class="{'transform rotate-180': open}" class="ml-1 h-5 w-5 inline-block transition-transform" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              </button>
              <div x-show="open" x-cloak class="pl-4">
                {
                  item.options.map((option) => (
                    <a href={option.path} class="block px-3 py-2 rounded-md text-base font-medium hover:text-blue-500" @click="openMobileMenu = false">{option.name}</a>
                  ))
                }
              </div>
            </div>
          )
        ))
      }
    </>
  </div>
</nav>



<script>

  import { actions } from "astro:actions";
  import Swal from "sweetalert2";
  const { signOut } = await import("auth-astro/client");

  console.log('Carga Script');

  document.addEventListener('astro:page-load', () => {
    const logoutExecuted = async () => {  
      await signOut();
      window.location.href = '/';
    }

    const logout = document.querySelector('#logout') as HTMLButtonElement;
    logout?.addEventListener('click', () => {
      logoutExecuted();
    });
  
    const logoutMobile = document.querySelector('#logout-mobile') as HTMLButtonElement;
    logoutMobile?.addEventListener('click', () => {
      logoutExecuted();
    });
  })
</script>

<script src="//unpkg.com/alpinejs" defer></script>





<style>
  /* Estilos adicionales si son necesarios */
</style>